
import java.io.IOException;
import java.nio.file.Paths;
import static java.time.Clock.system;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListModel;
import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.core.KeywordAnalyzer;
import org.apache.lucene.analysis.core.WhitespaceAnalyzer;
import org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.analysis.standard.UAX29URLEmailAnalyzer;
import org.apache.lucene.facet.FacetsConfig;
import org.apache.lucene.index.DirectoryReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.Term;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.queryparser.classic.QueryParser;
import org.apache.lucene.search.BooleanClause;
import org.apache.lucene.search.BooleanQuery;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.TermQuery;
import org.apache.lucene.search.similarities.BM25Similarity;
import org.apache.lucene.search.similarities.Similarity;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pablo
 */
public class Vista extends javax.swing.JFrame {
    ArrayList<String> salidas;
    Consultas consultas;
    IndexSearcher searcher;
    FacetsConfig fconfig;
    /**
     * Creates new form Vista
     */
    public Vista() throws IOException {
        initComponents();
        this.fconfig = new FacetsConfig();
         lCategoriaPrincipal.setModel(new DefaultListModel());
        lsubcategoria.setModel(new DefaultListModel());
        consultas = new Consultas("./index",fconfig);
        //
        
        
        Similarity similarity = new BM25Similarity(); // Por defecto en lucene
        // Inicializar valores para la consulta en el indice
        Directory dir = FSDirectory.open(Paths.get("./index"));
       
        IndexReader reader = DirectoryReader.open(dir);
        
        searcher = new IndexSearcher(reader);
        
        searcher.setSimilarity(similarity);
        
        
        this.setVisible(true);
        repaint();
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        lPregunta = new javax.swing.JLabel();
        tBusqueda = new javax.swing.JTextField();
        b_buscar = new javax.swing.JButton();
        tTotalResultados = new javax.swing.JTextField();
        lPregunta1 = new javax.swing.JLabel();
        lPregunta2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lCategoriaPrincipal = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        salida = new javax.swing.JTextArea();
        lPregunta3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsubcategoria = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lPregunta.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        lPregunta.setText("¿Qué quieres buscar?");

        b_buscar.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        b_buscar.setText("Buscar");
        b_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_buscarActionPerformed(evt);
            }
        });

        tTotalResultados.setEditable(false);

        lPregunta1.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        lPregunta1.setText("Resultados:");

        lPregunta2.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        lPregunta2.setText("Categorias:");

        lCategoriaPrincipal.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lCategoriaPrincipal.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lCategoriaPrincipal.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lCategoriaPrincipalValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lCategoriaPrincipal);

        salida.setEditable(false);
        salida.setColumns(20);
        salida.setRows(5);
        jScrollPane1.setViewportView(salida);

        lPregunta3.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        lPregunta3.setText("Posibilidades:");

        lsubcategoria.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lsubcategoria.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lsubcategoria.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lsubcategoriaValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lsubcategoria);

        jLabel1.setText("Si quiere buscar sobre distintos campos separe por \";\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lPregunta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                        .addComponent(tBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(b_buscar)
                        .addGap(2, 2, 2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lPregunta2)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lPregunta3)
                                    .addComponent(jScrollPane2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lPregunta1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tTotalResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPregunta)
                    .addComponent(tBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPregunta2)
                    .addComponent(tTotalResultados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lPregunta1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lPregunta3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_buscarActionPerformed
        lCategoriaPrincipal.setModel(new DefaultListModel());
        lsubcategoria.setModel(new DefaultListModel());

        salida.setText("");
        String busqueda = getBusqueda();
        String[] terminos = busqueda.split(";");
        
        
        Analyzer analyzer_por_defecto = new StandardAnalyzer();
        Map<String, Analyzer> analizadores = new HashMap<>();
        analizadores.put("Titulo", new StandardAnalyzer());
        analizadores.put("Link", new UAX29URLEmailAnalyzer());
        analizadores.put("Authors", new AnalizadoresPropios().AnalizadorCommas());
        try {
            analizadores.put("Authors ID", new AnalizadoresPropios().AnalizadorNumbers());
        } catch (IOException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        analizadores.put("IndexKeyword", new StandardAnalyzer());
        analizadores.put("Authro Keyword", new StandardAnalyzer());
        analizadores.put("Affiliations", new StandardAnalyzer());
        analizadores.put("EID", new AnalizadoresPropios().AnalizadorEID());

        PerFieldAnalyzerWrapper analyzer = new PerFieldAnalyzerWrapper(analyzer_por_defecto, analizadores);
        
        
        BooleanQuery.Builder bqbuilder = new BooleanQuery.Builder();
        for (int i = 0 ; i < terminos.length ; i++)
        {
            System.out.println(terminos[i]);
            QueryParser parser = new QueryParser("",analyzer);
            Query q1 = null; 
            try {
                 q1= parser.parse("titulo:\""+terminos[i]+"\" Authors:\""+terminos[i]+ "\" Authors ID:\"" +terminos[i]+ "\" IndexKeyword:\"" +terminos[i]+"\" Authro Keyword:\"" +terminos[i]+"\" Affiliations:\""+ terminos[i]+"\"");
                /*
                Query qTitulo = new TermQuery(new Term("titulo",terminos[i]));
                Query qAuthors= new TermQuery(new Term("Authors",terminos[i]));
                Query qAuthors_ID= new TermQuery(new Term("Authors ID",terminos[i]));
                Query qIndexKeyword= new TermQuery(new Term("IndexKeyword",terminos[i]));
                Query qAuthroKeyword= new TermQuery(new Term("Authro Keyword",terminos[i]));
                Query qAffiliations= new TermQuery(new Term("Affiliations",terminos[i]));
                */
            } catch (ParseException ex) {
                Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
            }
            BooleanClause bc1 = new BooleanClause(q1,BooleanClause.Occur.SHOULD);
            bqbuilder.add(bc1);
            /*
            BooleanClause bc1 = new BooleanClause(qTitulo,BooleanClause.Occur.SHOULD);
            BooleanClause bc2 = new BooleanClause(qAuthors_ID,BooleanClause.Occur.SHOULD);
            BooleanClause bc3 = new BooleanClause(qIndexKeyword,BooleanClause.Occur.SHOULD);
            BooleanClause bc4 = new BooleanClause(qAuthroKeyword,BooleanClause.Occur.SHOULD);
            BooleanClause bc5 = new BooleanClause(qAffiliations,BooleanClause.Occur.SHOULD);
            BooleanClause bc6 = new BooleanClause(qAuthors,BooleanClause.Occur.SHOULD);
            bqbuilder.add(bc1);
            bqbuilder.add(bc2);
            bqbuilder.add(bc3);bqbuilder.add(bc4);bqbuilder.add(bc5);bqbuilder.add(bc6);
            */
            
            
            
            
        }
        BooleanQuery bq = bqbuilder.build();
        System.out.println(bq.toString());
        salidas = consultas.obtenerConsulta(bq, searcher);
        
        
        tTotalResultados.setText(Integer.toString(salidas.size()));
        
        
        for(String i : salidas)
        {
            String antiguo = salida.getText();
            salida.setText(antiguo+"\n"+i);
        }
        
        
        
        //Rellenar Lista de Categorias
        DefaultListModel categorias = new DefaultListModel();
        
        Map<String,ArrayList<String>> map =  consultas.getFacetas();
        Iterator it = map.keySet().iterator();
        while(it.hasNext()){
          String key = (String) it.next();
          categorias.addElement(key);
          
        }
        lCategoriaPrincipal.setModel(categorias);

        repaint();
    }//GEN-LAST:event_b_buscarActionPerformed

    private void lCategoriaPrincipalValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lCategoriaPrincipalValueChanged
            if(!lCategoriaPrincipal.isSelectionEmpty() || lsubcategoria.isSelectionEmpty() ) 
            {
                Map<String,ArrayList<String>> map =  consultas.getFacetas();

                DefaultListModel categorias = new DefaultListModel();

                String key = lCategoriaPrincipal.getSelectedValue();
                ArrayList<String> subcategorias = map.get(key);
                for(String i : subcategorias)
                {
                    categorias.addElement(i);
                }
                lsubcategoria.setModel(new DefaultListModel());
                lsubcategoria.setModel(categorias);

                repaint();
            } 

        // TODO add your handling code here:
    }//GEN-LAST:event_lCategoriaPrincipalValueChanged

    private void lsubcategoriaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lsubcategoriaValueChanged
        // TODO add your handling code here:
        
        if(!lsubcategoria.isSelectionEmpty())
        {
            //DrillDown
            salidas = consultas.DrillDown(lCategoriaPrincipal.getSelectedValue(),lsubcategoria.getSelectedValue().split(" \\(")[0].strip());
            salida.setText("");
            tTotalResultados.setText(Integer.toString(salidas.size()));
            for(String i : salidas)
            {
                String antiguo = salida.getText();
                salida.setText(antiguo+"\n"+i);
            }
            repaint();
        }
        
    }//GEN-LAST:event_lsubcategoriaValueChanged
    
    public String getBusqueda()
    {
        return tBusqueda.getText();
        
    }
    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        // path

       
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Vista().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_buscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> lCategoriaPrincipal;
    private javax.swing.JLabel lPregunta;
    private javax.swing.JLabel lPregunta1;
    private javax.swing.JLabel lPregunta2;
    private javax.swing.JLabel lPregunta3;
    private javax.swing.JList<String> lsubcategoria;
    private javax.swing.JTextArea salida;
    private javax.swing.JTextField tBusqueda;
    private javax.swing.JTextField tTotalResultados;
    // End of variables declaration//GEN-END:variables
}
